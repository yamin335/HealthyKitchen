/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]
def versions = [:]
versions.androidx_appcompat = '1.2.0-rc01'
versions.kotlin = "1.3.72"
versions.constraint_layout = '2.0.0-beta4'
versions.junit = '4.13'
versions.android_gradle_plugin = '4.0.1'
versions.navigation = '2.3.0-alpha06'
versions.androidx_core_ktx = '1.3.0-rc01'
versions.dagger = '2.25.4'
versions.retrofit = '2.8.1'
versions.okhttp_logging_interceptor = '4.3.1'
versions.event = "3.1.1"
versions.work = "2.2.0"
versions.play_services_base = '17.1.0'
versions.play_services_phone = '17.3.0'
versions.timber = '4.7.1'
versions.play_core = '1.7.1'
versions.firebase_core = '17.2.1'
versions.firebase_messaging = '20.1.0'
versions.firebase_ml_vision = '24.0.1'
versions.firebase_ml_vision_face_model = '19.0.0'
versions.picasso = "2.71828"
versions.cropper = "2.8.0"
versions.google_services = "4.3.3"
versions.crashalytics_plugin = "1.31.2"
versions.browserVersion = "1.2.0"
versions.support_exif = '1.2.0-beta01'
versions.glide = '4.11.0'
versions.espresso = '3.3.0-alpha03'
versions.recyclerview = '1.1.0'
versions.material = '1.2.0-alpha06'
versions.support_annotations = '1.2.0-alpha01'
versions.legacy_support_v4 = '1.0.0'
versions.crashlytics = '2.10.1'
versions.firebase_analytics = '17.2.3'
versions.camerax_version = '1.0.0-beta07'
versions.camerax_view_version = '1.0.0-alpha14'
versions.mlkit_face_detection = '16.0.1'
versions.mlkit_text_recognition = '16.1.0'


def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support_annotations"
support.design = "com.google.android.material:material:$versions.material"
support.legacy_support_v4 = "androidx.legacy:legacy-support-v4:$versions.legacy_support_v4"
deps.support = support

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.junit = "junit:junit:$versions.junit"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

def navigation = [:]
navigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def androidx = [:]
androidx.core_ktx = "androidx.core:core-ktx:$versions.androidx_core_ktx"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
androidx.browser = "androidx.browser:browser:$versions.browserVersion"
androidx.exifinterface = "androidx.exifinterface:exifinterface:$versions.support_exif"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
deps.androidx = androidx

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.converter_scalar = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
deps.retrofit = retrofit

def work = [:]
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def play_services= [:]
play_services.base = "com.google.android.gms:play-services-base:$versions.play_services_base"
play_services.phone = "com.google.android.gms:play-services-auth-api-phone:$versions.play_services_phone"
deps.play_services = play_services

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase_core"
firebase.messaging = "com.google.firebase:firebase-messaging:$versions.firebase_messaging"
firebase.ml_vision = "com.google.firebase:firebase-ml-vision:$versions.firebase_ml_vision"
firebase.ml_vision_face_model = "com.google.firebase:firebase-ml-vision-face-model:$versions.firebase_ml_vision_face_model"
firebase.analytics = "com.google.firebase:firebase-analytics:$versions.firebase_analytics"
deps.firebase = firebase

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def camerax = [:]
camerax.core = "androidx.camera:camera-core:$versions.camerax_version"
camerax.camera2 = "androidx.camera:camera-camera2:$versions.camerax_version"
camerax.lifecycle = "androidx.camera:camera-lifecycle:$versions.camerax_version"
camerax.view = "androidx.camera:camera-view:$versions.camerax_view_version"
camerax.extensions = "androidx.camera:camera-extensions:$versions.camerax_view_version"
deps.camerax = camerax

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

deps.google_services = "com.google.gms:google-services:${versions.google_services}"
deps.crashalytics_plugin = "io.fabric.tools:gradle:${versions.crashalytics_plugin}"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.event = "org.greenrobot:eventbus:$versions.event"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.play_core = "com.google.android.play:core:$versions.play_core"
deps.picasso = "com.squareup.picasso:picasso:$versions.picasso"
deps.cropper = "com.theartofdev.edmodo:android-image-cropper:$versions.cropper"
deps.crashlytics = "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
deps.mlkit_face_detect = "com.google.mlkit:face-detection:$versions.mlkit_face_detection"
deps.mlkit_text_recognition = "com.google.android.gms:play-services-mlkit-text-recognition:$versions.mlkit_text_recognition"


ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 29
ext.build_versions = build_versions

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos
